name: OpenNebula CI/CD

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/opennebula-frontend
  HELM_CHART_NAME: opennebula-frontend
  K8S_NAMESPACE: opennebula

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:latest \
                       -t ${{ env.IMAGE_NAME }}:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner 
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ env.IMAGE_NAME }}:latest"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
 
      - name: Run Integration Tests
        run: |
          docker run -d --privileged --name opennebula_test \
            -p 2633:2633 \
            -p 9869:9869 \
            -p 2474:2474 \
            -p 29876:29876 \
            -p 2616:2616 \
            -p 2222:22 \
            ${{ env.IMAGE_NAME }}:latest
          
          timeout 30 bash -c 'until curl -sf http://localhost:9869; do sleep 2; done'
          timeout 30 bash -c 'until curl -sf http://localhost:2616; do sleep 2; done'

          docker stop opennebula_test
          docker rm opennebula_test

      - name: Setup Helm
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Package Helm Chart
        run: |
          helm dependency update helm/
          helm package helm/ -d ./helm-releases

      - name: Push Helm Chart
        uses: actions/upload-artifact@v3
        with:
          name: helm-chart
          path: ./helm-releases/*.tgz

      - name: Deploy to Kubernetes
        run: |
          helm upgrade --install \
            --namespace ${{ env.K8S_NAMESPACE }} \
            --set image.tag=${{ github.sha }} \
            --set dockerhub.username=${{ secrets.DOCKERHUB_USERNAME }} \
            ${{ env.HELM_CHART_NAME }} \
            ./helm-releases/*.tgz

      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag and Push Docker Image
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        run: |
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:latest

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION="${GITHUB_REF/refs\/tags\//}"
            docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.IMAGE_NAME }}:${VERSION}
            docker push ${{ env.IMAGE_NAME }}:${VERSION}
          fi
